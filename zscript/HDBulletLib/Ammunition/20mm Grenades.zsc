// ------------------------------
// CREATED BY WANZER
// ------------------------------

//20mm grenades, placeholder stats
//Balancing explosives is hard
const ENC_20MMGRENADE=ENC_ROCKET*0.4;
const ENC_20MMGRENADELOADED=ENC_ROCKETLOADED*0.4;

class WAN_20mmFragment:HDB_frag{
	default{
		pushfactor 0.7;
		mass 1;
		speed HDCONST_MPSTODUPT*550;
		accuracy 400;
		stamina 300;
		woundhealth 4;
		deathheight 0.2;  //minimum speed factor
		burnheight 0.5;	 //minimum scale factor
		projectilepassheight 3.;  //maximum scale factor
	}
}

class WAN_20mmLauncher:HDWeapon{
	//int airburst;
	action void A_Fire20mmGL(string firingsound="weapons/grenadeshot"){
		A_StartSound(firingsound,CHAN_WEAPON,CHANF_OVERLAP);
		vector3 gpos=pos+gunpos((0,0,-getdefaultbytype("WAN_20mmgrenade").height*0.6));
		let ggg=WAN_20mmgrenade(spawn("WAN_20mmgrenade",gpos,ALLOW_REPLACE));

		let hdp=hdplayerpawn(self);
		if(hdp){
			ggg.angle=hdp.gunangle;
			ggg.pitch=hdp.gunpitch-2.5;
		}else{
			ggg.angle=angle;
			ggg.pitch=pitch-2.5;
		}

		ggg.target=self;ggg.master=self;
		ggg.primed=false;
		if(invoker.airburst){
			ggg.airburst=max(1000,invoker.airburst)*HDCONST_ONEMETRE*0.01;
			if(!player||!(player.cmd.buttons&BT_ZOOM))invoker.airburst=0;
		}
	}
}
class WAN_20mmGrenade:SlowProjectile{
	//bool isrocket;
	default{
		-noextremedeath -noteleport +bloodlessimpact
		height 1.5; radius 1.5; scale 0.26;
		speed HDCONST_MPSTODUPT*40;
		mass 100; accuracy 0; woundhealth 0;
		obituary "$OB_20MM";
		stamina 5; //used for fuel
	}
	override void postbeginplay(){
		super.postbeginplay();
		//if(isrocket)speed*=2;
		A_ChangeVelocity(speed*cos(pitch),0,speed*sin(-pitch),CVF_RELATIVE);
	}
	override void ExplodeSlowMissile(line blockingline,actor blockingobject){
		if(max(abs(skypos.x),abs(skypos.y))>=32768){destroy();return;}
		bmissile=false;

		//bounce
		if(!primed&&random(0,20)){
			if(speed>50)painsound="misc/punch";else painsound="misc/fragknock";
			actor a=spawn("IdleDummy",pos,ALLOW_REPLACE);
			a.stamina=5;a.A_StartSound(painsound,CHAN_AUTO);
			[bmissileevenmore,a]=A_SpawnItemEx("WAN_Dud20mmGrenade",0,0,0,
				random(30,60),random(-10,10),random(-10,10),
				random(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,0
			);
			//dudrocket(a).isrocket=isrocket;
			destroy();
			return;
		}

		//damage
		//NOTE: basic impact damage calculation is ALREADY in base SlowProjectile!
		if(blockingobject){
			int dmgg=random(6,12);
			/*if(isrocket){
				double dangle=absangle(angle,angleto(blockingobject));
				if(dangle<20){
					dmgg+=random(200,600);
					if(hd_debug)A_Log("CRIT!");
				}else if(dangle<40)dmgg+=random(100,400);
			}*/
			blockingobject.damagemobj(self,target,dmgg,"Piercing");
		}else doordestroyer.destroydoor(self,maxdepth:frandom(2,3));

		//explosion
		if(!inthesky){
			A_SprayDecal("Scorch",8);
			A_HDBlast(
				//blastradius:128,blastdamage:random(24,48),fullblastradius:48,
				pushradius:128,pushamount:64,fullpushradius:48,
				fragradius:HDCONST_ONEMETRE*(3.2+0.2*stamina),fragtype:"WAN_20mmFragment",fragments:1117,
				immolateradius:48,immolateamount:random(3,30),
				immolatechance:10
			);
			actor xpl=spawn("WAN_20mmsploder",pos-(0,0,1),ALLOW_REPLACE);
			xpl.target=target;xpl.master=master;xpl.stamina=stamina;
		}else{
			distantnoise.make(self,"world/rocketfar");
		}
		A_SpawnChunksFrags("WAN_20mmFragment",30,1);//long range shrapnel separate to fragradius
		destroy();return;
	}
	states{
	spawn:
		MA7G A 0;
	spawn1:
		#### A 1;
		#### A 0;
	spawngrenade:
		#### A 0;
		#### A 0{primed=true;}
	spawngrenadefinal:
		#### A 1;
		loop;
	death:
		TNT1 A 1;
		stop;
	}
}

class WAN_20mmsploder:HDActor{
	int ud;
	default{
		+noblockmap +missile +nodamagethrust
		gravity 0;height 6;radius 6;
		damagefactor(0);
	}
	override void postbeginplay(){
		super.postbeginplay();
		A_ChangeVelocity(1,0,0,CVF_RELATIVE);
		distantnoise.make(self,"world/rocketfar");
	}
	states{
	death:
		TNT1 A 0{
			if(ceilingz-pos.z<(pos.z-floorz)*3) ud=-5;
			else ud=5;
		}
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("HugeWallChunk", -1,0,ud,
			frandom(-7,7),frandom(-7,7),ud*frandom(1,3),
			frandom(0,360),SXF_NOCHECKPOSITION
		);
		TNT1 AAAAAAAAAAAA 0 A_SpawnItemEx("BigWallChunk", -1,0,ud,
			frandom(-1,6),frandom(-4,4),ud*frandom(1,4),
			frandom(0,360),SXF_NOCHECKPOSITION
		);
		TNT1 AA 0 A_SpawnItemEx("HDSmoke", -1,0,ud,
			frandom(-2,2),frandom(-2,2),0,
			frandom(-15,15),SXF_NOCHECKPOSITION
		);
	xdeath:
	spawn:
		TNT1 A 0 nodelay;
		//TNT1 A 0 A_SpawnItemEx("HDExplosion",
		//	random(-1,1),random(-1,1),2, 0,0,0,
		//	0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS
		//);
		TNT1 A 2 A_SpawnItemEx("HDExplosion",0,0,0,
			0,0,2,
			0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS
		);
		TNT1 AAAAAAAA 0 A_SpawnItemEx("BigWallChunk",0,0,1,
			random(-1,6),random(-4,4),random(4,18),
			random(-15,15),SXF_NOCHECKPOSITION
		);
	death2:
		TNT1 AA 0 A_SpawnItemEx("HDSmoke",-1,0,1,
			random(-2,3),random(-2,2),0,
			random(-15,15),SXF_NOCHECKPOSITION
		);
		TNT1 A 21{
			A_AlertMonsters();
			DistantQuaker.Quake(self,2,17,176,10);
		}stop;
	}
}

class WAN_20mmGrenadeAmmo:HDAmmo{
	default{

		inventory.pickupmessage "$PICKUP_20MM";
		scale 0.33;
		tag "$TAG_20MMGREN";
		hdpickup.refid '2gr';
		hdpickup.bulk ENC_20MMGRENADE;
		inventory.maxamount (60+40);
		inventory.icon "MA7GB0";
	}
	states{
	spawn:
		MA7G B -1;
		stop;
	}
}

class WAN_20mmGrenadeBox:HDUPK{
	default{
		scale 0.33;
		tag "$TAG_20MMGRENBOX";
		hdupk.pickupmessage "$PICKUP_20MMBOX";
		hdupk.pickuptype "WAN_20mmGrenadeAmmo";
		hdupk.amount 10;
	}
	states{
	spawn:
		MA7G C -1;
		stop;
	}
}

class WAN_Dud20mmGrenade:HDActor{ //You can't use them for anything so there's no need to be able to pick them up currently
	//bool isrocket;
	default{
		projectile; -nogravity -noteleport +bounceonactors
		-noblockmap -grenadetrail -floorclip +forcexybillboard
		+nodamagethrust +noblood
		bouncetype "doom"; decal "none";
		mass 30; pushfactor 3.4; bouncefactor 0.3; gravity 1;
		deathsound "misc/fragknock";
		bouncesound "misc/fragknock";
		wallbouncesound "misc/fragknock";
		obituary "$OB_20MM";
		//hdupk.pickupmessage "picked up (and defused) a rocket grenade.";
		damagefactor(0);
		radius 1.5; height 1.5; scale 0.26;
	}
	states{
	spawn:
		MA7G A 0 A_Jump(256,"clean");
		MA7G A 2 A_SetAngle(angle+45);
		loop;
	death:
		MA7G A 0{
			return; //why did we have these flags anyway?
			bmissile=false;
			bpushable=true;
			bshootable=true;
			bsolid=true;
		}
	dead:
		MA7G A 0 A_Jump(64,"clean");
		MA7G A 1 A_SetTics(random(21000,100000));
		MA7G A 0 A_Jump(64,"dead");
		goto explode;
	clean:
		MA7G A -1;
		stop;
	explode:
		---- A 0{
			A_SprayDecal("Scorch",8);
			A_HDBlast(
				blastradius:128,blastdamage:random(24,48),fullblastradius:48,
				pushradius:128,pushamount:64,fullpushradius:48,
				fragradius:HDCONST_ONEMETRE*(0.19*stamina),fragtype:"HDB_frag",
				immolateradius:48,immolateamount:random(3,30),
				immolatechance:10
			);
			actor xpl=spawn("WAN_20mmsploder",pos-(0,0,1),ALLOW_REPLACE);
			xpl.target=target;xpl.master=master;xpl.stamina=stamina;
			A_SpawnChunksFrags("HDB_frag",10,1);
		}stop;
	/*give:
		---- A 0 A_JumpIfInTargetInventory("DudRocketAmmo",0,3);
		---- A 0 A_GiveToTarget("DudRocketAmmo",1);
		---- A 0 A_StartSound("weapons/grenopen",CHAN_BODY);
		stop;
		ROCQ A 0 A_Jump(1,"Explode");
		ROCQ A 0 spawn("DudRocketAmmo",pos,ALLOW_REPLACE);
		stop;*/
	}
}
